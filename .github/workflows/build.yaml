name: Build

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

#env:
#  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        distro: [ "ubuntu:24.04", "debian:12" ]
    container: ${{ matrix.distro }}

    steps:
      # node is required by most of the actions
      - run: apt-get update && apt-get install -y nodejs
      - name: Read system info
        uses: kenchan0130/actions-system-info@v1.3.0
        id: sysinfo
      - run: echo "System info ${{ steps.sysinfo.outputs.system_info }}"
      - uses: actions/checkout@v3
      - name: "Install build deps for native-tls"
        run: ./scripts/install_builddeps.sh
      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
      - run: cargo build
      - name: Create deb package
        id: cargo-deb
        uses: ./.github/actions/cargo-deb
      - name: "Upload artifact"
        uses: actions/upload-artifact@v4
        env:
          # disable proxy for local artifact upload
          https_proxy: ""
          http_proxy: ""
        with:
          name: "${{ steps.sysinfo.outputs.name }}-${{ steps.sysinfo.outputs.release }}"
          path: target/debian/${{ steps.cargo-deb.outputs.name }}
          if-no-files-found: error
      - name: "Rename .deb file for release"
        id: release_deb
        working-directory: target/debian
        run: |
          base_name=$(basename ${{ steps.cargo-deb.outputs.name }} .deb)
          release_name="${base_name}_${{ steps.sysinfo.outputs.name }}-${{ steps.sysinfo.outputs.release }}.deb"
          echo "BaseName: ${base_name}; ReleaseName: ${release_name}"
          mv ${{ steps.cargo-deb.outputs.name }} ${release_name}
          echo "file=target/debian/${release_name}" >> $GITHUB_OUTPUT
      - uses: softprops/action-gh-release@v2
        with:
          files: ${{ steps.release_deb.outputs.file }}
          draft: true
